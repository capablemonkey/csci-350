(DEFUN MY-LENGTH (LIST)
  (COND
    ((ENDP LIST) 0)
    (T (+ 1 (MY-LENGTH (REST LIST))))))

; (PRINT (MY-LENGTH '(1 2 3 4 5)))

(DEFUN MY-REMOVE (X LIST)
  (COND
    ((ENDP LIST) NIL)
    ((EQUAL X (FIRST LIST)) (MY-REMOVE X (REST LIST)))
    (T (CONS (FIRST LIST) (MY-REMOVE X (REST LIST))))))

; (PRINT (MY-REMOVE 'A '(A B A C)))

(DEFUN REPLACE-FIRST (A B LIST)
  (COND 
    ((ENDP LIST) NIL)
    ((EQUAL A (FIRST LIST)) (CONS B (REST LIST)))
    (T (CONS (FIRST LIST) (REPLACE-FIRST A B (REST LIST))))))

; (PRINT (REPLACE-FIRST 'A 'X '(A B C A D E)) )

(DEFUN COUNT-ATOMS (LIST)
  (COND
    ((ENDP LIST) 0)
    ((ATOM (FIRST LIST))
      (+ 1 (COUNT-ATOMS (REST LIST))))
    (T
      (COUNT-ATOMS (REST LIST)))))

; (TRACE COUNT-ATOMS)
; (PRINT (COUNT-ATOMS '(A B C D E)))

(DEFUN TEST-LIST-FOR-ITEM (ITEM LIST)
  (COND
    ((ENDP LIST) NIL)
    ((EQUAL ITEM (FIRST LIST)) (CONS T (TEST-LIST-FOR-ITEM ITEM (REST LIST))))
    (T (CONS NIL (TEST-LIST-FOR-ITEM ITEM (REST LIST))))))

(PRINT (test-list-for-item 'A '(A B C A E)))